---
// ContactPopup.astro
---

<!-- Botón flotante -->
<button
  id="openContactBtn"
  class="fixed top-24 right-4 z-50 bg-[#FF6100] text-white px-4 py-2 rounded-lg shadow-lg hover:bg-[#E65600] transition-colors flex items-center gap-2"
>
  <svg
    xmlns="http://www.w3.org/2000/svg"
    class="h-5 w-5"
    viewBox="0 0 20 20"
    fill="currentColor"
  >
    <path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"></path>
    <path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"></path>
  </svg>
  Contáctanos
</button>

<!-- Popup del formulario -->
<div id="contactPopup" class="fixed inset-0 z-50 invisible">
  <!-- Overlay -->
  <div class="absolute inset-0 bg-black bg-opacity-50 transition-opacity duration-300 opacity-0"></div>

  <!-- Contenedor del formulario -->
  <div class="absolute inset-y-0 right-0 flex items-start justify-end">
    <!-- Formulario -->
    <div class="bg-white w-full max-w-md p-6 min-h-screen md:min-h-[auto] md:mt-20 md:mr-4 md:rounded-lg shadow-xl transition-transform duration-300 transform translate-x-full">
      <!-- Botón de cerrar -->
      <button
        id="closeContactBtn"
        class="absolute top-4 right-4 text-gray-500 hover:text-gray-700"
        aria-label="Cerrar formulario"
      >
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>

      <h3 class="text-2xl font-semibold text-[#1B365D] mb-6" title="Contáctanos">Contáctanos</h3>

      <form id="contactForm" class="space-y-4">
        <div>
          <label for="name" class="block text-gray-700 mb-2">Nombre completo</label>
          <input
            type="text"
            id="name"
            name="name"
            required
            class="input"
            placeholder="Ingresa tu nombre"
          />
        </div>

        <div>
          <label for="phone" class="block text-gray-700 mb-2">Teléfono</label>
          <div class="relative">
            <input
              type="tel"
              id="phone"
              name="phone"
              required
              pattern="^\+593[0-9]{9}$"
              class="input"
              placeholder="+593xxxxxxxxx"
            />
            <p id="phoneError" class="text-red-500 text-sm mt-1 hidden">
              El número debe empezar con +593 seguido de 9 dígitos
            </p>
          </div>
        </div>

        <button
          type="submit"
          class="w-full bg-[#FF6100] text-white py-2 rounded-lg hover:bg-[#E65600] transition-colors"
        >
          Enviar
        </button>
      </form>
    </div>
  </div>
</div>

<script>
  function initializeContactForm() {
    const openBtn = document.querySelector<HTMLButtonElement>("#openContactBtn");
    const closeBtn = document.querySelector<HTMLButtonElement>("#closeContactBtn");
    const popup = document.querySelector<HTMLDivElement>("#contactPopup");
    const overlay = popup?.querySelector<HTMLDivElement>(".bg-black");
    const formContainer = popup?.querySelector<HTMLDivElement>(".bg-white");
    const form = document.querySelector<HTMLFormElement>("#contactForm");
    const phoneInput = document.querySelector<HTMLInputElement>("#phone");
    const phoneError = document.querySelector<HTMLParagraphElement>("#phoneError");

    if (!openBtn || !closeBtn || !popup || !overlay || !formContainer || !form || !phoneInput || !phoneError) {
      console.error("No se encontraron todos los elementos necesarios");
      return;
    }

    // Validación en tiempo real del teléfono
    phoneInput.addEventListener('input', (e) => {
      const target = e.target as HTMLInputElement;
      const phoneRegex = /^\+593[0-9]{9}$/;
      
      if (!phoneRegex.test(target.value)) {
          phoneError.classList.remove('hidden');
          target.setCustomValidity('El número debe empezar con +593 seguido de 9 dígitos');
      } else {
          phoneError.classList.add('hidden');
          target.setCustomValidity('');
      }
    });

    // Auto-prefijo +593
    phoneInput.addEventListener('focus', (e) => {
      const target = e.target as HTMLInputElement;
      if (!target.value.startsWith('+593')) {
          target.value = '+593';
      }
    });

    const openPopup = () => {
      popup.classList.remove("invisible");

      requestAnimationFrame(() => {
        overlay.classList.remove("opacity-0");
        formContainer.classList.remove("translate-x-full");
      });

      const firstInput = form.querySelector("input");
      firstInput?.focus();
    };

    const closePopup = () => {
      overlay.classList.add("opacity-0");
      formContainer.classList.add("translate-x-full");

      setTimeout(() => {
        popup.classList.add("invisible");
        openBtn.focus();
      }, 300);
    };

    openBtn.addEventListener("click", openPopup);
    closeBtn.addEventListener("click", closePopup);
    overlay.addEventListener("click", closePopup);

    form.addEventListener("submit", async (e) => {
      e.preventDefault();
      
      try {
        const formData = new FormData(form);
        const data = Object.fromEntries(formData);
        const phoneRegex = /^\+593[0-9]{9}$/;

        // Validación adicional antes de enviar
        if (!phoneRegex.test(data.phone as string)) {
            alert('Por favor, ingresa un número de teléfono válido (+593 seguido de 9 dígitos)');
            return;
        }

        const response = await fetch("/api/submit", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(data),
        });

        if (!response.ok) throw new Error("Error en el envío");

        form.reset();
        closePopup();
        alert("¡Gracias por contactarnos!");
      } catch (error) {
        alert("Error al enviar el formulario");
      }
    });
  }

  document.addEventListener("astro:page-load", initializeContactForm);
  initializeContactForm();
</script>

<style>
  .input {
    width: 100%;
    padding: 0.5rem 1rem;
    border: 1px solid #d1d5db;
    border-radius: 0.5rem;
    outline: none;
    transition:
      border-color 0.3s,
      box-shadow 0.3s;
  }

  .input:focus {
    border-color: #e65600;
    box-shadow: 0 0 0 2px rgba(236, 76, 13, 0.719);
  }
</style>