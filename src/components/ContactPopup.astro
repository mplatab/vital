---
// ContactPopup.astro
---

<!-- Botón flotante -->
<button
  id="openContactBtn"
  class="fixed top-24 right-4 z-50 bg-[#91D2E3] text-white px-4 py-2 rounded-lg shadow-lg hover:bg-[#7BC0D1] transition-colors flex items-center gap-2"
>
  <svg
    xmlns="http://www.w3.org/2000/svg"
    class="h-5 w-5"
    viewBox="0 0 20 20"
    fill="currentColor"
  >
    <path
      d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"
    ></path>
    <path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"></path>
  </svg>
  Contáctanos
</button>

<!-- Popup del formulario -->
<div id="contactPopup" class="fixed inset-0 z-50 invisible">
  <!-- Overlay -->
  <div
    class="absolute inset-0 bg-black bg-opacity-50 transition-opacity duration-300 opacity-0"
  >
  </div>

  <!-- Contenedor del formulario -->
  <div class="absolute inset-y-0 right-0 flex items-start justify-end">
    <!-- Formulario -->
    <div
      class="bg-white w-full max-w-md p-6 min-h-screen md:min-h-[auto] md:mt-20 md:mr-4 md:rounded-lg shadow-xl transition-transform duration-300 transform translate-x-full"
    >
      <!-- Botón de cerrar -->
      <button
        id="closeContactBtn"
        class="absolute top-4 right-4 text-gray-500 hover:text-gray-700"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-6 w-6"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>

      <h3 class="text-2xl font-semibold text-[#1B365D] mb-6">Contáctanos</h3>

      <form id="contactForm" class="space-y-4">
        <div>
          <label for="name" class="block text-gray-700 mb-2"
            >Nombre completo</label
          >
          <input
            type="text"
            id="name"
            name="name"
            required
            class="w-full px-4 py-2 rounded-lg border border-gray-300 focus:border-[#91D2E3] focus:ring-1 focus:ring-[#91D2E3] outline-none transition-colors"
            placeholder="Ingresa tu nombre"
          />
        </div>

        <div>
          <label for="phone" class="block text-gray-700 mb-2">Teléfono</label>
          <input
            type="tel"
            id="phone"
            name="phone"
            required
            class="w-full px-4 py-2 rounded-lg border border-gray-300 focus:border-[#91D2E3] focus:ring-1 focus:ring-[#91D2E3] outline-none transition-colors"
            placeholder="Ingresa tu teléfono"
          />
        </div>

        <button
          type="submit"
          class="w-full bg-[#91D2E3] text-white py-2 rounded-lg hover:bg-[#7BC0D1] transition-colors"
        >
          Enviar
        </button>
      </form>
    </div>
  </div>
</div>

<script>
  function initializeContactForm() {
    const openBtn =
      document.querySelector<HTMLButtonElement>("#openContactBtn");
    const closeBtn =
      document.querySelector<HTMLButtonElement>("#closeContactBtn");
    const popup = document.querySelector<HTMLDivElement>("#contactPopup");
    const overlay = popup?.querySelector<HTMLDivElement>(".bg-black");
    const formContainer = popup?.querySelector<HTMLDivElement>(".bg-white");
    const form = document.querySelector<HTMLFormElement>("#contactForm");

    if (
      !openBtn ||
      !closeBtn ||
      !popup ||
      !overlay ||
      !formContainer ||
      !form
    ) {
      console.error("No se encontraron todos los elementos necesarios");
      return;
    }

    const openPopup = () => {
      // Hacer visible el popup
      popup.classList.remove("invisible");

      // Animar la entrada
      requestAnimationFrame(() => {
        overlay.classList.remove("opacity-0");
        formContainer.classList.remove("translate-x-full");
      });
    };

    const closePopup = () => {
      // Animar la salida
      overlay.classList.add("opacity-0");
      formContainer.classList.add("translate-x-full");

      // Esperar a que termine la animación antes de ocultar
      setTimeout(() => {
        popup.classList.add("invisible");
      }, 300);
    };

    openBtn.addEventListener("click", openPopup);
    closeBtn.addEventListener("click", closePopup);

    // Cerrar al hacer clic en el overlay
    overlay.addEventListener("click", closePopup);

    // Manejar envío del formulario
    form.addEventListener("submit", async (e) => {
      e.preventDefault();

      const formData = new FormData(form);
      const data = Object.fromEntries(formData);

      try {
        const response = await fetch("/api/submit", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(data),
        });

        if (!response.ok) throw new Error("Error en el envío");

        form.reset();
        closePopup();
        alert("¡Gracias por contactarnos!");
      } catch (error) {
        alert("Error al enviar el formulario");
      }
    });
  }

  // Inicializar cuando el DOM esté listo
  document.addEventListener("astro:page-load", initializeContactForm);

  // También inicializar inmediatamente
  initializeContactForm();
</script>
